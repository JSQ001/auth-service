<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hand.hcf.app.mdata.bank.persistence.BankInfoTempMapper">
    <insert id="confirmImport">
        INSERT INTO sys_bank_info
        (id,
        tenant_id,
        country_code,
        country_name,
        bank_code,
        swift_code,
        bank_name,
        bank_branch_name,
        enabled,
        deleted,
        created_date,
        last_updated_date)
        SELECT t.id,
        #{tenantId},
        t.country_code,
        t.country_name,
        t.bank_code,
        t.swift_code,
        t.bank_name,
        t.bank_branch_name,
        t.enabled,
        0,
        #{currentDate},
        #{currentDate}
        FROM sys_bank_info_temp t
        WHERE t.batch_number = #{transactionId}
        AND t.error_flag = 0
    </insert>

    <update id="updateExists">
        UPDATE sys_bank_info_temp t
        SET t.error_flag   = 1,
        t.error_detail = concat(error_detail,
        '银行代码已经存在，不允许重复导入!')
        WHERE (EXISTS
        (SELECT 1
        FROM sys_bank_info b
        WHERE b.bank_code = t.bank_code
        AND deleted = 0
        ) OR EXISTS
        (SELECT 1
        FROM (SELECT b1.bank_code
        FROM sys_bank_info_temp b1
        WHERE b1.batch_number = #{batchNumber}
        GROUP BY b1.bank_code
        HAVING COUNT(0) > 1) temp
        WHERE temp.bank_code = t.bank_code))
        AND t.batch_number = #{batchNumber}
    </update>

    <update id="updateBranchExists">
        UPDATE sys_bank_info_temp t
        SET t.error_flag   = 1,
        t.error_detail = concat(error_detail,
        '支行已经存在，不允许重复导入!')
        WHERE (EXISTS
        (SELECT 1
        FROM sys_bank_info b
        WHERE b.bank_branch_name = t.bank_branch_name
        AND B.DELETED = 0
        ) OR EXISTS
        (SELECT 1
        FROM (SELECT b1.bank_branch_name
        FROM sys_bank_info_temp b1
        WHERE b1.batch_number = #{batchNumber}
        GROUP BY b1.bank_branch_name
        HAVING COUNT(0) > 1) temp
        WHERE temp.bank_branch_name = t.bank_branch_name))
        AND t.batch_number = #{batchNumber}
    </update>

    <select id="queryInfo" resultMap="queryInfoMap">
        select (select
        count(0) as successEntities
        from sys_bank_info_temp
        where batch_number = #{transactionID}
        and error_flag = 0) as successEntities,
        (select
        count(0) as failureEntities
        from sys_bank_info_temp
        where batch_number = #{transactionID}
        and error_flag = 1) as failureEntities,
        #{transactionID} as transaction_id
        from dual
    </select>

    <resultMap id="queryInfoMap" type="com.hand.hcf.app.core.web.dto.ImportResultDTO">
        <result column="successEntities" property="successEntities"/>
        <result column="failureEntities" property="failureEntities"/>
        <collection property="errorData" select="queryErrorData"
                    column="{transactionId=transaction_id}"/>
    </resultMap>
    <select id="queryErrorData" resultMap="errorDataMap">
        select t.row_number AS row_number,
        t.error_detail AS error
        FROM sys_bank_info_temp t
        WHERE t.batch_number = #{transactionId}
        and t.error_flag = 1
    </select>
    <resultMap id="errorDataMap" type="com.hand.hcf.app.core.web.dto.ImportErrorDTO">
        <result column="row_number" property="index"/>
        <result column="error" property="error"/>
    </resultMap>

    <select id="getImportBankInfoIds" resultType="java.lang.Long">
        SELECT  t.id
        FROM sys_bank_info_temp t
        WHERE t.batch_number = #{transactionId}
        AND t.error_flag = 0
    </select>
</mapper>
